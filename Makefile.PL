use inc::Module::Install;
use Getopt::Long;
use Path::Class ();
use Pod::Usage;

my @module = qw(
    Module::Install::AuthorTests
    Module::Install::XSUtil
);
my @missing;
foreach my $module (@module) {
    eval "require $module";
    push @missing, $module if $@;
}
if (@missing) {
    print STDERR <<EOM;
*** Missing Modules ***

EOM
    foreach my $module (@missing) {
        print STDERR "  * $module\n";
    }
    exit 0;
}

my $opt = {
    rabbitmq_user     => 'guest',
    rabbitmq_password => 'guest',
    rabbitmq_host     => 'dev.rabbitmq.com',
    rabbitmq_port     => 5672,
    rabbitmq_vhost    => '/',
};
GetOptions(
    $opt,
    'rabbitmq_lib=s',
    'rabbitmq_inc=s',
    'rabbitmq_user=s',
    'rabbitmq_password=s',
    'rabbitmq_host=s',
    'rabbitmq_port=i',
    'rabbitmq_vhost=s',
    'h|help'
);
pod2usage(1) if $opt->{help};
gen_config($opt);
gen_constants_file($opt);

name 'RabbitMQ';
all_from 'lib/RabbitMQ.pm';

test_requires 'Test::More';

tests 't/*.t';
recursive_author_tests('xt');

use_ppport;
use_xshelper '-clean';
cc_warnings;
cc_include_paths $opt->{rabbitmq_inc} if $opt->{rabbitmq_inc};
cc_libs "-L" . $opt->{rabbitmq_lib} if $opt->{rabbitmq_lib};
cc_libs '-lrabbitmq';

WriteAll;

sub gen_config {
    my $opt = shift;

    my $dir = Path::Class::dir( 't', 'lib', 'Test', 'RabbitMQ' );
    $dir->mkpath;
    my $file = $dir->file('Config.pm');
    my $fh = $file->open('w') or die "Could not open file $file: $!";
    print $fh <<EOM;
package Test::RabbitMQ::Config;

# Do not edit this file. This file was automatically generated
# by Makefile.PL on @{[scalar localtime]}. If you want to
# regenerate it, remove this file and re-run Makefile.PL

use strict;
use warnings;
use base 'Exporter';

our \@EXPORT = qw( USER PASSWORD HOST PORT VHOST );

use constant USER     => \'$opt->{rabbitmq_user}\';
use constant PASSWORD => \'$opt->{rabbitmq_password}\';
use constant HOST     => \'$opt->{rabbitmq_host}\';
use constant PORT     => \'$opt->{rabbitmq_port}\';
use constant VHOST    => \'$opt->{rabbitmq_vhost}\';

1;

__END__
EOM
}

sub gen_constants_file {
    my $opt = shift;

    my $in     = Path::Class::file( $opt->{rabbitmq_inc}, 'amqp_framing.h' );
    my $out    = Path::Class::file('const-xs.inc');
    my $fh_in  = $in->openr or die "Could not open file: $!";
    my $fh_out = $out->openw or die "Could not open file: $!";
    print $fh_out
        "# Do not edit this file. This file was automatically generated\n",
        "# by Makefile.PL on @{[scalar localtime]}. If you want to\n",
        "# regenerate it, remove this file and re-run Makefile.PL\n",
        "\n",
        "IV\n",
        "_constant()\n",
        "    ALIAS:\n",
    ;
    while ( my $line = <$fh_in> ) {
        chomp $line;
        if ( $line =~ /^\#define\s+(AMQP_[A-Z0-9_]+)\s+([\d])/ ) {
            print $fh_out "        $1 = $1\n";
        }
    }
    print $fh_out
        "    CODE:\n",
        "        RETVAL = ix;\n",
        "    OUTPUT:\n",
        "        RETVAL\n"
    ;
    $fh_in->close;
    $fh_out->close;
}

__END__
